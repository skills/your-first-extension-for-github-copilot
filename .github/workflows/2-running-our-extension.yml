name: Step 2 # Running our extension

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  actions: write
  issues: write

env:
  # Keywords required in the issue comment to allow this workflow to run
  REQUIRED_ISSUE_COMMENT_KEYWORDS: "@mona,please,check,codespace,running"
  STEP_3_FILE: ".github/steps/3-connecting-to-github.md"

jobs:
  required_issue_comment_keywords:
    name: Check issue comment text for required keywords
    runs-on: ubuntu-latest

    steps:
      - name: Stop early if missing the expected keywords
        run: |
          required_keywords=(${REQUIRED_ISSUE_COMMENT_KEYWORDS//,/ })
          for keyword in "${required_keywords[@]}"; do
          if [[ ! "${{ github.event.comment.body }}" =~ $keyword ]]; then
            exit 0
          fi
          done

  find_exercise:
    name: Find exercise by issue title
    runs-on: ubuntu-latest
    needs: required_issue_comment_keywords

    outputs:
      issue-url: ${{ steps.get-issue-url-by-title.outputs.ISSUE_URL }}

    steps:
      - id: get-issue-url-from-event
        run: |
          echo "ISSUE_URL=${{ github.event.issue.html_url }}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: get-issue-url-by-title
        run: |
          issue_url=$(gh issue list --repo ${{ github.repository }} --search "in:title Exercise:" --json url,title --jq '.[].url')
          echo "ISSUE_URL=" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: find_exercise
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Get codespace url
        id: get-codespace-url
        run: |
          port=3000
          codespace_name=$(gh codespace list --json name --jq '.[0].name')
          codespace_url=$(echo "${codespace_name}- ${port}.app.github.dev")
          echo "CODESPACE_URL=$codespace_url" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check codespace is running
        run: |
          echo "Checking codespace is running at: $CODESPACE_URL"
          resp_code=$(curl -s -o /dev/null -w "%{http_code}" $CODESPACE_URL)
          if [ "$resp_code" -eq 200 ]; then
            echo "Codespace confirmed running"
          else
            echo "Codespace is not running"
            exit 1
          fi

      # END: Check practical exercise

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=3

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "${{ steps.build-message-step-finish.outputs.updated-text }}" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_3_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 2"
          gh workflow enable "Step 3"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
